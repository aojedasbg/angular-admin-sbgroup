{"version":3,"sources":["./src/app/pages/new-user/new-user.module.ts","./src/app/pages/new-user/new-user.component.ts","./src/app/pages/new-user/new-user.component.html"],"names":[],"mappings":"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","file":"new-user-new-user-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { GeneralModule } from '../../_metronic/partials/content/general/general.module';\r\nimport { NewUserComponent } from './new-user.component';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { NgbNavModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NewUserComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    GeneralModule,\r\n    HighlightModule,\r\n    NgbNavModule,\r\n    NgbTooltipModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: NewUserComponent,\r\n      },\r\n    ]),\r\n  ]\r\n})\r\nexport class NewUserModule { }\r\n","import { formatCurrency } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UsersService } from \"../../services/users.service\";\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport Swal from 'sweetalert2'\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.scss']\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n  user = {\r\n    pic : './assets/media/users/default.jpg'\r\n  };\r\n  imageError: string;\r\n  isImageSaved: boolean;\r\n  previewImagePath: string;\r\n  newUserForm: FormGroup;\r\n  cardImageBase64: string;\r\n\r\n  segmentList = [];\r\n  basicSegment: string;\r\n  segmentUrlName = ' ';\r\n  saveData: object;\r\n  \r\n  constructor( private usersService: UsersService, private router: Router, private formBuilder: FormBuilder, private _cdr: ChangeDetectorRef) {\r\n    this.newUserForm = new FormGroup({\r\n      name: new FormControl(null,[Validators.required, ]),\r\n      phone: new FormControl(null,[Validators.required, ]),\r\n      position: new FormControl(null,[Validators.required, ]),\r\n      url: new FormControl(null,[Validators.required, ]),\r\n      image: new FormControl(null,[Validators.required, ]),\r\n      email: new FormControl(null,[Validators.required, Validators.email]),\r\n      segment: new FormControl(Validators.required),\r\n      whatsappPhone: new FormControl(null,[Validators.required,]),\r\n      whatsappMsg: new FormControl('Hi! Can you give me more information about',[Validators.required, ])\r\n    })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    \r\n    this.getSegments();\r\n\r\n  }\r\n\r\n  save(){\r\n    this.saveData = {\r\n      userInfo:{\r\n        name: this.newUserForm.get('name').value,\r\n        phone: this.newUserForm.get('phone').value,\r\n        position: this.newUserForm.get('position').value,\r\n        url: this.segmentUrlName + '/' + this.newUserForm.get('url').value+'.html',\r\n        email: this.newUserForm.get('email').value,\r\n        image: this.previewImagePath,\r\n        segment_id: this.newUserForm.get('segment').value.id\r\n      },\r\n      whatsappInfo:{\r\n        phone: this.newUserForm.get('whatsappPhone').value,\r\n        msg: this.newUserForm.get('whatsappMsg').value\r\n      }\r\n    }\r\n    console.log(this.newUserForm);\r\n    this.usersService.createUser(this.saveData).subscribe(response => {\r\n      if(response.status === 1){\r\n        Swal.fire(\r\n          'Éxito',\r\n          'Registro Agregado',\r\n          'success'\r\n        )\r\n        this.router.navigate(['/users/'])\r\n      }else if(response.error === 'ER_DUP_ENTRY'){\r\n        Swal.fire(\r\n          'Error',\r\n          'Ocurrió un problema al guardar al usuario, url ya existe',\r\n          'error'\r\n        )\r\n      }else{\r\n        Swal.fire(\r\n          'Error',\r\n          'Ocurrió un problema al guardar al usuario',\r\n          'error'\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.imageError = null;\r\n    if (fileInput.target.files && fileInput.target.files[0]) {\r\n        // Size Filter Bytes\r\n        const max_size = 20971520;\r\n        const allowed_types = ['image/png', 'image/jpeg'];\r\n        const max_height = 15200;\r\n        const max_width = 25600;\r\n\r\n        if (fileInput.target.files[0].size > max_size) {\r\n            this.imageError =\r\n                'Maximum size allowed is ' + max_size / 1000 + 'Mb';\r\n\r\n            return false;\r\n        }\r\n\r\n        if (!_.includes(allowed_types, fileInput.target.files[0].type)) {\r\n            this.imageError = 'Only Images are allowed ( JPG | PNG )';\r\n            return false;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = (e: any) => {\r\n            const image = new Image();\r\n            image.src = e.target.result;\r\n            image.onload = async rs => {\r\n                const img_height = rs.currentTarget['height'];\r\n                const img_width = rs.currentTarget['width'];\r\n\r\n                if (img_height > max_height && img_width > max_width) {\r\n                    this.imageError =\r\n                        'Maximum dimentions allowed ' +\r\n                        max_height +\r\n                        '*' +\r\n                        max_width +\r\n                        'px';\r\n                    return false;\r\n                } else {\r\n                    this.newUserForm.get('image').updateValueAndValidity();\r\n                    const imgBase64Path = e.target.result;\r\n                    this.cardImageBase64  = imgBase64Path;\r\n                    await this.cardImageBase64;\r\n                    this.isImageSaved = true;\r\n                    this.previewImagePath = imgBase64Path;\r\n                    this._cdr.detectChanges();\r\n                }\r\n            };\r\n        };\r\n\r\n        reader.readAsDataURL(fileInput.target.files[0]);\r\n    }\r\n}\r\n\r\n  getSegments(){\r\n    this.usersService.segments().subscribe(response => {\r\n      this.segmentList = response.results;\r\n      this._cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  segmentSelect(){\r\n    this.basicSegment = this.newUserForm.get('segment').value.name\r\n\r\n    this.segmentUrlName = this.basicSegment.replace(/ /g,\"-\");\r\n    this.segmentUrlName = this.segmentUrlName.toLowerCase();\r\n  }\r\n\r\n  navigateToUsers(){\r\n    this.router.navigate(['/users/']);\r\n  }\r\n}\r\n","<form [formGroup]=\"newUserForm\" (ngSubmit)=\"save()\">\r\n    <ng-container>\r\n      <div class=\"row mb-5\">\r\n        <div class=\"col-lg-6 col-xl-6\">\r\n          \r\n          <h3 class=\"boldfont-weight-bolder text-dark\"><i class=\"arrow left float-left\" (click)=\"navigateToUsers()\" title=\"Volver\"></i>Crear Usuario</h3>\r\n        </div>\r\n        <div class=\"col-lg-6 col-xl-6\">\r\n          <button class=\"btn btn-success btn-lg float-right\" style=\"background-color: #6AA12A; border-color: #6AA12A;\"[disabled]=\"newUserForm.status === 'INVALID'\" >Guardar</button>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n      <div class=\"card card-custom \" >      \r\n        <div class=\"card-header py-3\">\r\n          <div class=\"card-title align-items-start flex-column\">\r\n            <h3 class=\"card-label font-weight-bolder text-dark\">Informacion de la cuenta</h3>\r\n          </div>\r\n        </div>\r\n        <!--end::Header-->\r\n        <!--begin::Form-->\r\n        <div class=\"form\">\r\n          <!--begin::Body-->\r\n          <div class=\"card-body\">\r\n            \r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Nombre completo:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"name\"\r\n                  \r\n                />\r\n                <ng-container\r\n                  [ngTemplateOutlet]=\"formError\"\r\n                  [ngTemplateOutletContext]=\"{\r\n                    validation: 'required',\r\n                    message: 'Nombre es requerido.',\r\n                    control: newUserForm.controls['name']\r\n                  }\"\r\n                ></ng-container>\r\n                <ng-container\r\n                  [ngTemplateOutlet]=\"formError\"\r\n                  [ngTemplateOutletContext]=\"{\r\n                    validation: 'minLength',\r\n                    message: 'Nombre debe tener al menos 3 caracteres.',\r\n                    control: newUserForm.controls['name']\r\n                  }\"\r\n                ></ng-container>\r\n                <ng-container\r\n                  [ngTemplateOutlet]=\"formError\"\r\n                  [ngTemplateOutletContext]=\"{\r\n                    validation: 'maxLength',\r\n                    message: 'Nombre debe tener como maximo 50 caracteres',\r\n                    control: newUserForm.controls['name']\r\n                  }\"\r\n                ></ng-container>\r\n              </div>\r\n              <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">Puesto:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"position\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Puesto es requerido.',\r\n                  control: newUserForm.controls['position']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Teléfono:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"phone\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Teléfono es requerido.',\r\n                  control: newUserForm.controls['phone']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n              <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">Correo:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Email es requerido.',\r\n                  control: newUserForm.controls['email']\r\n                }\"\r\n              ></ng-container>\r\n              <ng-container\r\n              [ngTemplateOutlet]=\"formError\"\r\n              [ngTemplateOutletContext]=\"{\r\n                validation: 'email',\r\n                message: 'Email debe ser válido',\r\n                control: newUserForm.controls['email']\r\n              }\"\r\n            ></ng-container>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Segmento:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <select class=\"form-control form-control-lg\" formControlName=\"segment\" (change)=\"segmentSelect()\" >\r\n                  <option [ngValue]=\"null\" disabled>Selecciona el segmento</option>\r\n                  <option *ngFor=\"let segment of segmentList\" [ngValue]=\"segment\">\r\n                    {{segment.name}}\r\n                  </option>\r\n                </select>\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Segmento es requerido.',\r\n                  control: newUserForm.controls['segment']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n              <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">URL:</label>\r\n              <label class=\"col-lg-2 col-xl-2 col-form-label\" style=\"padding-right:0px !important; padding-left:0px !important;\">sbgroup.com.mx/{{segmentUrlName}}/</label>\r\n              <div class=\"col-lg-2 col-xl-2\" style=\"padding-right:0px !important; padding-left:0px !important;\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"url\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Url es requerido.',\r\n                  control: newUserForm.controls['url']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n              <label class=\"col-lg-1 col-xl-1 col-form-label\" style=\"padding-right:0px !important; padding-left:0px !important;\">.html</label>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-3 col-lg-3 col-form-label font-weight-bold\">Imagen asesor:</label>\r\n              <div class=\"col-lg-9 col-xl-6\">\r\n                <div class=\"image-input image-input-outline\"\r\n                  id=\"kt_profile_avatar\"\r\n                >\r\n                  <div >\r\n                    <ng-container *ngIf=\"isImageSaved; else elseTemplate\">\r\n                        <img style=\"max-width:200px; height:auto;\" [src]=\"cardImageBase64\" />\r\n                    </ng-container>\r\n                    <ng-template #elseTemplate>\r\n                        <img src=\"./assets/media/users/default.jpg\" style=\"max-width:200px; height:auto;\" class=\"img-responsive\">\r\n                    </ng-template>\r\n                  </div>\r\n                  \r\n                  <label class=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                    data-action=\"change\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"\"\r\n                    data-original-title=\"Change avatar\"\r\n                  >\r\n                    <i class=\"fa fa-pen icon-sm text-muted\"></i>\r\n                    <input type=\"file\" name=\"profile_avatar\" (change)=\"fileChangeEvent($event)\" accept=\".png, .jpg, .jpeg\" formControlName=\"image\" />\r\n                  </label>\r\n                </div>\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Imagen es requerido.',\r\n                  control: newUserForm.controls['image']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--end::Body-->\r\n        \r\n          <div class=\"card-header py-3\">\r\n              <div class=\"card-title align-items-start flex-column\">\r\n              <h3 class=\"card-label font-weight-bolder text-dark\">Mensaje personalizado Whatsapp</h3>\r\n              </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n              <div class=\"form-group row\">\r\n                  <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Número celular:</label>\r\n                  <div class=\"col-lg-5 col-xl-4\">\r\n                  <input class=\"form-control form-control-lg form-control-solid\"\r\n                      type=\"text\"\r\n                      formControlName=\"whatsappPhone\"\r\n                  />\r\n                  <ng-container\r\n                    [ngTemplateOutlet]=\"formError\"\r\n                    [ngTemplateOutletContext]=\"{\r\n                      validation: 'required',\r\n                      message: 'Número de whastapp es requerido.',\r\n                      control: newUserForm.controls['whatsappPhone']\r\n                    }\"\r\n                  ></ng-container>\r\n                  </div>\r\n                  <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">Mensaje:</label>\r\n                  <div class=\"col-lg-5 col-xl-4\">\r\n                  <textarea class=\"form-control form-control-lg form-control-solid\" id=\"exampleFormControlTextarea1\" rows=\"8\" style=\"resize: none;\" formControlName=\"whatsappMsg\"></textarea>\r\n                  <ng-container\r\n                    [ngTemplateOutlet]=\"formError\"\r\n                    [ngTemplateOutletContext]=\"{\r\n                      validation: 'required',\r\n                      message: 'Mensaje de whatsapp es requerido.',\r\n                      control: newUserForm.controls['whatsappMsg']\r\n                    }\"\r\n                  ></ng-container>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <!--end::Form-->\r\n      </div>\r\n    </ng-container>\r\n  </form>\r\n  \r\n  <ng-template\r\n    #formError\r\n    let-control=\"control\"\r\n    let-message=\"message\"\r\n    let-validation=\"validation\"\r\n  >\r\n    <ng-container\r\n      *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n    >\r\n      <div class=\"fv-plugins-message-container\">\r\n        <div class=\"fv-help-block\">\r\n          {{ message }}\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </ng-template>"],"sourceRoot":"webpack:///"}