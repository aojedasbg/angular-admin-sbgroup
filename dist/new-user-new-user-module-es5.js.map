{"version":3,"sources":["webpack:///src/app/pages/new-user/new-user.module.ts","webpack:///src/app/pages/new-user/new-user.component.html","webpack:///src/app/pages/new-user/new-user.component.ts"],"names":["NewUserModule","forChild","path","component","declarations","imports","NewUserComponent","usersService","router","formBuilder","_cdr","user","pic","segmentList","segmentUrlName","newUserForm","name","required","phone","position","url","image","email","segment","whatsappPhone","whatsappMsg","getSegments","saveData","userInfo","get","value","previewImagePath","segment_id","id","whatsappInfo","msg","console","log","createUser","subscribe","response","status","fire","navigate","error","fileInput","imageError","target","files","max_size","allowed_types","max_height","max_width","size","type","reader","FileReader","onload","e","Image","src","result","rs","img_height","currentTarget","img_width","updateValueAndValidity","imgBase64Path","cardImageBase64","isImageSaved","detectChanges","readAsDataURL","segments","results","basicSegment","replace","toLowerCase","save","navigateToUsers","segmentSelect","fileChangeEvent","selector","templateUrl","styleUrls"],"mappings":"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","file":"new-user-new-user-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { GeneralModule } from '../../_metronic/partials/content/general/general.module';\r\nimport { NewUserComponent } from './new-user.component';\r\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\nimport { NgbNavModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NewUserComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    GeneralModule,\r\n    HighlightModule,\r\n    NgbNavModule,\r\n    NgbTooltipModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: NewUserComponent,\r\n      },\r\n    ]),\r\n  ]\r\n})\r\nexport class NewUserModule { }\r\n","<form [formGroup]=\"newUserForm\" (ngSubmit)=\"save()\">\r\n    <ng-container>\r\n      <div class=\"row mb-5\">\r\n        <div class=\"col-lg-6 col-xl-6\">\r\n          \r\n          <h3 class=\"boldfont-weight-bolder text-dark\"><i class=\"arrow left float-left\" (click)=\"navigateToUsers()\" title=\"Volver\"></i>Crear Usuario</h3>\r\n        </div>\r\n        <div class=\"col-lg-6 col-xl-6\">\r\n          <button class=\"btn btn-success btn-lg float-right\" style=\"background-color: #6AA12A; border-color: #6AA12A;\"[disabled]=\"newUserForm.status === 'INVALID'\" >Guardar</button>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n      <div class=\"card card-custom \" >      \r\n        <div class=\"card-header py-3\">\r\n          <div class=\"card-title align-items-start flex-column\">\r\n            <h3 class=\"card-label font-weight-bolder text-dark\">Informacion de la cuenta</h3>\r\n          </div>\r\n        </div>\r\n        <!--end::Header-->\r\n        <!--begin::Form-->\r\n        <div class=\"form\">\r\n          <!--begin::Body-->\r\n          <div class=\"card-body\">\r\n            \r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Nombre completo:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"name\"\r\n                  \r\n                />\r\n                <ng-container\r\n                  [ngTemplateOutlet]=\"formError\"\r\n                  [ngTemplateOutletContext]=\"{\r\n                    validation: 'required',\r\n                    message: 'Nombre es requerido.',\r\n                    control: newUserForm.controls['name']\r\n                  }\"\r\n                ></ng-container>\r\n                <ng-container\r\n                  [ngTemplateOutlet]=\"formError\"\r\n                  [ngTemplateOutletContext]=\"{\r\n                    validation: 'minLength',\r\n                    message: 'Nombre debe tener al menos 3 caracteres.',\r\n                    control: newUserForm.controls['name']\r\n                  }\"\r\n                ></ng-container>\r\n                <ng-container\r\n                  [ngTemplateOutlet]=\"formError\"\r\n                  [ngTemplateOutletContext]=\"{\r\n                    validation: 'maxLength',\r\n                    message: 'Nombre debe tener como maximo 50 caracteres',\r\n                    control: newUserForm.controls['name']\r\n                  }\"\r\n                ></ng-container>\r\n              </div>\r\n              <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">Puesto:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"position\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Puesto es requerido.',\r\n                  control: newUserForm.controls['position']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Teléfono:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"phone\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Teléfono es requerido.',\r\n                  control: newUserForm.controls['phone']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n              <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">Correo:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"email\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Email es requerido.',\r\n                  control: newUserForm.controls['email']\r\n                }\"\r\n              ></ng-container>\r\n              <ng-container\r\n              [ngTemplateOutlet]=\"formError\"\r\n              [ngTemplateOutletContext]=\"{\r\n                validation: 'email',\r\n                message: 'Email debe ser válido',\r\n                control: newUserForm.controls['email']\r\n              }\"\r\n            ></ng-container>\r\n              </div>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Segmento:</label>\r\n              <div class=\"col-lg-5 col-xl-4\">\r\n                <select class=\"form-control form-control-lg\" formControlName=\"segment\" (change)=\"segmentSelect()\" >\r\n                  <option [ngValue]=\"null\" disabled>Selecciona el segmento</option>\r\n                  <option *ngFor=\"let segment of segmentList\" [ngValue]=\"segment\">\r\n                    {{segment.name}}\r\n                  </option>\r\n                </select>\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Segmento es requerido.',\r\n                  control: newUserForm.controls['segment']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n              <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">URL:</label>\r\n              <label class=\"col-lg-2 col-xl-2 col-form-label\" style=\"padding-right:0px !important; padding-left:0px !important;\">sbgroup.com.mx/{{segmentUrlName}}/</label>\r\n              <div class=\"col-lg-2 col-xl-2\" style=\"padding-right:0px !important; padding-left:0px !important;\">\r\n                <input class=\"form-control form-control-lg form-control-solid\"\r\n                  type=\"text\"\r\n                  formControlName=\"url\"\r\n                  \r\n                />\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Url es requerido.',\r\n                  control: newUserForm.controls['url']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n              <label class=\"col-lg-1 col-xl-1 col-form-label\" style=\"padding-right:0px !important; padding-left:0px !important;\">.html</label>\r\n            </div>\r\n            <div class=\"form-group row\">\r\n              <label class=\"col-xl-3 col-lg-3 col-form-label font-weight-bold\">Imagen asesor:</label>\r\n              <div class=\"col-lg-9 col-xl-6\">\r\n                <div class=\"image-input image-input-outline\"\r\n                  id=\"kt_profile_avatar\"\r\n                >\r\n                  <div >\r\n                    <ng-container *ngIf=\"isImageSaved; else elseTemplate\">\r\n                        <img style=\"max-width:200px; height:auto;\" [src]=\"cardImageBase64\" />\r\n                    </ng-container>\r\n                    <ng-template #elseTemplate>\r\n                        <img src=\"./assets/media/users/default.jpg\" style=\"max-width:200px; height:auto;\" class=\"img-responsive\">\r\n                    </ng-template>\r\n                  </div>\r\n                  \r\n                  <label class=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\r\n                    data-action=\"change\"\r\n                    data-toggle=\"tooltip\"\r\n                    title=\"\"\r\n                    data-original-title=\"Change avatar\"\r\n                  >\r\n                    <i class=\"fa fa-pen icon-sm text-muted\"></i>\r\n                    <input type=\"file\" name=\"profile_avatar\" (change)=\"fileChangeEvent($event)\" accept=\".png, .jpg, .jpeg\" formControlName=\"image\" />\r\n                  </label>\r\n                </div>\r\n                <ng-container\r\n                [ngTemplateOutlet]=\"formError\"\r\n                [ngTemplateOutletContext]=\"{\r\n                  validation: 'required',\r\n                  message: 'Imagen es requerido.',\r\n                  control: newUserForm.controls['image']\r\n                }\"\r\n              ></ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--end::Body-->\r\n        \r\n          <div class=\"card-header py-3\">\r\n              <div class=\"card-title align-items-start flex-column\">\r\n              <h3 class=\"card-label font-weight-bolder text-dark\">Mensaje personalizado Whatsapp</h3>\r\n              </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n              <div class=\"form-group row\">\r\n                  <label class=\"col-xl-2 col-lg-2 col-form-label font-weight-bold\">Número celular:</label>\r\n                  <div class=\"col-lg-5 col-xl-4\">\r\n                  <input class=\"form-control form-control-lg form-control-solid\"\r\n                      type=\"text\"\r\n                      formControlName=\"whatsappPhone\"\r\n                  />\r\n                  <ng-container\r\n                    [ngTemplateOutlet]=\"formError\"\r\n                    [ngTemplateOutletContext]=\"{\r\n                      validation: 'required',\r\n                      message: 'Número de whastapp es requerido.',\r\n                      control: newUserForm.controls['whatsappPhone']\r\n                    }\"\r\n                  ></ng-container>\r\n                  </div>\r\n                  <label class=\"col-xl-1 col-lg-1 col-form-label font-weight-bold\">Mensaje:</label>\r\n                  <div class=\"col-lg-5 col-xl-4\">\r\n                  <textarea class=\"form-control form-control-lg form-control-solid\" id=\"exampleFormControlTextarea1\" rows=\"8\" style=\"resize: none;\" formControlName=\"whatsappMsg\"></textarea>\r\n                  <ng-container\r\n                    [ngTemplateOutlet]=\"formError\"\r\n                    [ngTemplateOutletContext]=\"{\r\n                      validation: 'required',\r\n                      message: 'Mensaje de whatsapp es requerido.',\r\n                      control: newUserForm.controls['whatsappMsg']\r\n                    }\"\r\n                  ></ng-container>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <!--end::Form-->\r\n      </div>\r\n    </ng-container>\r\n  </form>\r\n  \r\n  <ng-template\r\n    #formError\r\n    let-control=\"control\"\r\n    let-message=\"message\"\r\n    let-validation=\"validation\"\r\n  >\r\n    <ng-container\r\n      *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n    >\r\n      <div class=\"fv-plugins-message-container\">\r\n        <div class=\"fv-help-block\">\r\n          {{ message }}\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </ng-template>","import { formatCurrency } from '@angular/common';\r\nimport { Component, OnDestroy, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { UsersService } from \"../../services/users.service\";\r\nimport { Router } from '@angular/router';\r\nimport * as _ from 'lodash';\r\nimport Swal from 'sweetalert2'\r\n@Component({\r\n  selector: 'app-new-user',\r\n  templateUrl: './new-user.component.html',\r\n  styleUrls: ['./new-user.component.scss']\r\n})\r\nexport class NewUserComponent implements OnInit {\r\n  user = {\r\n    pic : './assets/media/users/default.jpg'\r\n  };\r\n  imageError: string;\r\n  isImageSaved: boolean;\r\n  previewImagePath: string;\r\n  newUserForm: FormGroup;\r\n  cardImageBase64: string;\r\n\r\n  segmentList = [];\r\n  basicSegment: string;\r\n  segmentUrlName = ' ';\r\n  saveData: object;\r\n  \r\n  constructor( private usersService: UsersService, private router: Router, private formBuilder: FormBuilder, private _cdr: ChangeDetectorRef) {\r\n    this.newUserForm = new FormGroup({\r\n      name: new FormControl(null,[Validators.required, ]),\r\n      phone: new FormControl(null,[Validators.required, ]),\r\n      position: new FormControl(null,[Validators.required, ]),\r\n      url: new FormControl(null,[Validators.required, ]),\r\n      image: new FormControl(null,[Validators.required, ]),\r\n      email: new FormControl(null,[Validators.required, Validators.email]),\r\n      segment: new FormControl(Validators.required),\r\n      whatsappPhone: new FormControl(null,[Validators.required,]),\r\n      whatsappMsg: new FormControl('Hi! Can you give me more information about',[Validators.required, ])\r\n    })\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    \r\n    this.getSegments();\r\n\r\n  }\r\n\r\n  save(){\r\n    this.saveData = {\r\n      userInfo:{\r\n        name: this.newUserForm.get('name').value,\r\n        phone: this.newUserForm.get('phone').value,\r\n        position: this.newUserForm.get('position').value,\r\n        url: this.segmentUrlName + '/' + this.newUserForm.get('url').value+'.html',\r\n        email: this.newUserForm.get('email').value,\r\n        image: this.previewImagePath,\r\n        segment_id: this.newUserForm.get('segment').value.id\r\n      },\r\n      whatsappInfo:{\r\n        phone: this.newUserForm.get('whatsappPhone').value,\r\n        msg: this.newUserForm.get('whatsappMsg').value\r\n      }\r\n    }\r\n    console.log(this.newUserForm);\r\n    this.usersService.createUser(this.saveData).subscribe(response => {\r\n      if(response.status === 1){\r\n        Swal.fire(\r\n          'Éxito',\r\n          'Registro Agregado',\r\n          'success'\r\n        )\r\n        this.router.navigate(['/users/'])\r\n      }else if(response.error === 'ER_DUP_ENTRY'){\r\n        Swal.fire(\r\n          'Error',\r\n          'Ocurrió un problema al guardar al usuario, url ya existe',\r\n          'error'\r\n        )\r\n      }else{\r\n        Swal.fire(\r\n          'Error',\r\n          'Ocurrió un problema al guardar al usuario',\r\n          'error'\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  fileChangeEvent(fileInput: any) {\r\n    this.imageError = null;\r\n    if (fileInput.target.files && fileInput.target.files[0]) {\r\n        // Size Filter Bytes\r\n        const max_size = 20971520;\r\n        const allowed_types = ['image/png', 'image/jpeg'];\r\n        const max_height = 15200;\r\n        const max_width = 25600;\r\n\r\n        if (fileInput.target.files[0].size > max_size) {\r\n            this.imageError =\r\n                'Maximum size allowed is ' + max_size / 1000 + 'Mb';\r\n\r\n            return false;\r\n        }\r\n\r\n        if (!_.includes(allowed_types, fileInput.target.files[0].type)) {\r\n            this.imageError = 'Only Images are allowed ( JPG | PNG )';\r\n            return false;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = (e: any) => {\r\n            const image = new Image();\r\n            image.src = e.target.result;\r\n            image.onload = async rs => {\r\n                const img_height = rs.currentTarget['height'];\r\n                const img_width = rs.currentTarget['width'];\r\n\r\n                if (img_height > max_height && img_width > max_width) {\r\n                    this.imageError =\r\n                        'Maximum dimentions allowed ' +\r\n                        max_height +\r\n                        '*' +\r\n                        max_width +\r\n                        'px';\r\n                    return false;\r\n                } else {\r\n                    this.newUserForm.get('image').updateValueAndValidity();\r\n                    const imgBase64Path = e.target.result;\r\n                    this.cardImageBase64  = imgBase64Path;\r\n                    await this.cardImageBase64;\r\n                    this.isImageSaved = true;\r\n                    this.previewImagePath = imgBase64Path;\r\n                    this._cdr.detectChanges();\r\n                }\r\n            };\r\n        };\r\n\r\n        reader.readAsDataURL(fileInput.target.files[0]);\r\n    }\r\n}\r\n\r\n  getSegments(){\r\n    this.usersService.segments().subscribe(response => {\r\n      this.segmentList = response.results;\r\n      this._cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  segmentSelect(){\r\n    this.basicSegment = this.newUserForm.get('segment').value.name\r\n\r\n    this.segmentUrlName = this.basicSegment.replace(/ /g,\"-\");\r\n    this.segmentUrlName = this.segmentUrlName.toLowerCase();\r\n  }\r\n\r\n  navigateToUsers(){\r\n    this.router.navigate(['/users/']);\r\n  }\r\n}\r\n"]}